
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// 
// This template generates PublicResXFileCodeGenerator compatible code plus some
// useful extensions. 
// 
// The original version provided by ResXResourceManager is restricted to resource key names
// that are valid c# identifiers to keep this template simple (KISS!).
// 
// Us it as it is or as a scaffold to generate the code you need.
//
// As long as you have ResXResourceManager running in the background, the generated code 
// will be kept up to date.
//  
//------------------------------------------------------------------------------

namespace HelloWorld.Resources.Languages {

    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by a text template.
    // To add or remove a member, edit your .ResX file.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ResXResourceManager", "1.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class I18nMessageBox : global::Localization.ICultural, global::System.ComponentModel.INotifyPropertyChanged {

        private static readonly global::System.Lazy<I18nMessageBox> LazyInstance = new global::System.Lazy<I18nMessageBox>(() => new I18nMessageBox());

        /// <summary>
        ///   Instance of this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static I18nMessageBox Instance => LazyInstance.Value;
        
        #nullable enable
        public event global::System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        private void OnResourceCultureChanged()
        {
            this.PropertyChanged?.Invoke(this, new global::System.ComponentModel.PropertyChangedEventArgs(null));
        }
        
        /// <summary>
        ///   Returns ResourceManager instance.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public global::System.Resources.ResourceManager ResourceManager { get; private set; }
        
        #nullable enable
        private global::System.Globalization.CultureInfo? ResourceCulture;

        /// <summary>
        ///   Returns Culture instance or null.
        /// </summary>
        #nullable enable
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public global::System.Globalization.CultureInfo? Culture
        {
            get
            {
                return this.ResourceCulture;
            }
            set
            {
                if (this.ResourceCulture == value)
                {
                    return;
                }
                this.ResourceCulture = value;
                this.OnResourceCultureChanged();
            }
        }
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        private I18nMessageBox() {
            //this.ResourceManager = new global::System.Resources.ResourceManager("HelloWorld.Resources.Languages.I18nMessageBox", typeof(I18nMessageBox).Assembly);
            this.ResourceManager = new global::Localization.ResourceManagerX("HelloWorld.Resources.resources.dll", "HelloWorld.Resources.Languages.I18nMessageBox", typeof(I18nMessageBox));
            ((global::Localization.ICulturalManager) global::System.Windows.Application.Current).AddCultural(this);
        }

        public string this[string key]
        {
            get
            {
                return this.ResourceManager.GetString(key, this.Culture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to "Do you want to exit?"
        /// </summary>
        public string Do_you_want_to_exit_
        {
            get
            {
                return this.ResourceManager.GetString("Do you want to exit?", this.Culture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to "Exit"
        /// </summary>
        public string Exit
        {
            get
            {
                return this.ResourceManager.GetString("Exit", this.Culture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to "Message"
        /// </summary>
        public string Message
        {
            get
            {
                return this.ResourceManager.GetString("Message", this.Culture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to "No"
        /// </summary>
        public string No
        {
            get
            {
                return this.ResourceManager.GetString("No", this.Culture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to "Yes"
        /// </summary>
        public string Yes
        {
            get
            {
                return this.ResourceManager.GetString("Yes", this.Culture) ?? string.Empty;
            }
        }
    }

}
